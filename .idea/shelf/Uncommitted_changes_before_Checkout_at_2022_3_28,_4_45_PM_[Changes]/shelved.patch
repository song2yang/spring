Index: build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>plugins {\n\tid 'io.spring.dependency-management' version '1.0.11.RELEASE' apply false\n\tid 'io.spring.nohttp' version '0.0.10'\n\tid \"io.freefair.aspectj\" version '6.2.0' apply false\n\tid 'org.jetbrains.dokka' version '1.6.10' apply false\n\tid 'org.jetbrains.kotlin.jvm' version '1.5.32' apply false\n\tid \"org.jetbrains.kotlin.plugin.serialization\" version \"1.5.32\" apply false\n\tid 'org.asciidoctor.jvm.convert' version '3.3.2'\n\tid 'org.asciidoctor.jvm.pdf' version '3.3.2'\n\tid \"org.unbroken-dome.xjc\" version '2.0.0' apply false\n\tid \"com.github.ben-manes.versions\" version '0.39.0'\n\tid \"com.github.johnrengelman.shadow\" version '7.0.0' apply false\n\tid 'de.undercouch.download' version '4.1.2'\n\tid \"me.champeau.jmh\" version \"0.6.6\" apply false\n}\n\next {\n\tmoduleProjects = subprojects.findAll { it.name.startsWith(\"spring-\") }\n\tjavaProjects = subprojects - project(\":framework-bom\")\n\twithoutJclOverSlf4j = {\n\t\texclude group: \"org.slf4j\", name: \"jcl-over-slf4j\"\n\t}\n}\n\nconfigure(allprojects) { project ->\n\tapply plugin: \"io.spring.dependency-management\"\n\n\tdependencyManagement {\n\t\timports {\n\t\t\tmavenBom \"com.fasterxml.jackson:jackson-bom:2.12.6\"\n\t\t\tmavenBom \"io.netty:netty-bom:4.1.75.Final\"\n\t\t\tmavenBom \"io.projectreactor:reactor-bom:2020.0.17\"\n\t\t\tmavenBom \"io.r2dbc:r2dbc-bom:Arabba-SR12\"\n\t\t\tmavenBom \"io.rsocket:rsocket-bom:1.1.1\"\n\t\t\tmavenBom \"org.eclipse.jetty:jetty-bom:9.4.45.v20220203\"\n\t\t\tmavenBom \"org.jetbrains.kotlin:kotlin-bom:1.5.32\"\n\t\t\tmavenBom \"org.jetbrains.kotlinx:kotlinx-coroutines-bom:1.5.2\"\n\t\t\tmavenBom \"org.jetbrains.kotlinx:kotlinx-serialization-bom:1.2.2\"\n\t\t\tmavenBom \"org.junit:junit-bom:5.8.2\"\n\t\t}\n\t\tdependencies {\n\t\t\tdependencySet(group: 'org.apache.logging.log4j', version: '2.17.2') {\n\t\t\t\tentry 'log4j-api'\n\t\t\t\tentry 'log4j-core'\n\t\t\t\tentry 'log4j-jul'\n\t\t\t\tentry 'log4j-slf4j-impl'\n\t\t\t}\n\t\t\tdependency \"org.slf4j:slf4j-api:1.7.36\"\n\t\t\tdependency(\"com.google.code.findbugs:findbugs:3.0.1\") {\n\t\t\t\texclude group: \"dom4j\", name: \"dom4j\"\n\t\t\t}\n\t\t\tdependency \"com.google.code.findbugs:jsr305:3.0.2\"\n\n\t\t\tdependencySet(group: 'org.aspectj', version: '1.9.7') {\n\t\t\t\tentry 'aspectjrt'\n\t\t\t\tentry 'aspectjtools'\n\t\t\t\tentry 'aspectjweaver'\n\t\t\t}\n\t\t\tdependencySet(group: 'org.codehaus.groovy', version: '3.0.9') {\n\t\t\t\tentry 'groovy'\n\t\t\t\tentry 'groovy-jsr223'\n\t\t\t\tentry 'groovy-templates'  // requires findbugs for warning-free compilation\n\t\t\t\tentry 'groovy-test'\n\t\t\t\tentry 'groovy-xml'\n\t\t\t}\n\n\t\t\tdependency \"io.reactivex:rxjava:1.3.8\"\n\t\t\tdependency \"io.reactivex:rxjava-reactive-streams:1.2.1\"\n\t\t\tdependency \"io.reactivex.rxjava2:rxjava:2.2.21\"\n\t\t\tdependency \"io.reactivex.rxjava3:rxjava:3.1.3\"\n\t\t\tdependency \"io.smallrye.reactive:mutiny:1.4.0\"\n\t\t\tdependency \"io.projectreactor.tools:blockhound:1.0.6.RELEASE\"\n\n\t\t\tdependency \"com.caucho:hessian:4.0.63\"\n\t\t\tdependency \"com.fasterxml:aalto-xml:1.3.1\"\n\t\t\tdependency(\"com.fasterxml.woodstox:woodstox-core:6.2.8\") {\n\t\t\t\texclude group: \"stax\", name: \"stax-api\"\n\t\t\t}\n\t\t\tdependency \"com.google.code.gson:gson:2.8.9\"\n\t\t\tdependency \"com.google.protobuf:protobuf-java-util:3.19.3\"\n\t\t\tdependency \"com.googlecode.protobuf-java-format:protobuf-java-format:1.4\"\n\t\t\tdependency(\"com.thoughtworks.xstream:xstream:1.4.18\") {\n\t\t\t\texclude group: \"xpp3\", name: \"xpp3_min\"\n\t\t\t\texclude group: \"xmlpull\", name: \"xmlpull\"\n\t\t\t}\n\t\t\tdependency \"org.apache.johnzon:johnzon-jsonb:1.2.16\"\n\t\t\tdependency(\"org.codehaus.jettison:jettison:1.3.8\") {\n\t\t\t\texclude group: \"stax\", name: \"stax-api\"\n\t\t\t}\n\t\t\tdependencySet(group: 'org.jibx', version: '1.3.3') {\n\t\t\t\tentry 'jibx-bind'\n\t\t\t\tentry 'jibx-run'\n\t\t\t}\n\t\t\tdependency \"org.ogce:xpp3:1.1.6\"\n\t\t\tdependency \"org.yaml:snakeyaml:1.30\"\n\n\t\t\tdependency \"com.h2database:h2:2.1.210\"\n\t\t\tdependency \"com.github.ben-manes.caffeine:caffeine:2.9.3\"\n\t\t\tdependency \"com.github.librepdf:openpdf:1.3.26\"\n\t\t\tdependency \"com.rometools:rome:1.18.0\"\n\t\t\tdependency \"commons-io:commons-io:2.5\"\n\t\t\tdependency \"io.vavr:vavr:0.10.4\"\n\t\t\tdependency \"net.sf.jopt-simple:jopt-simple:5.0.4\"\n\t\t\tdependencySet(group: 'org.apache.activemq', version: '5.16.2') {\n\t\t\t\tentry 'activemq-broker'\n\t\t\t\tentry('activemq-kahadb-store') {\n\t\t\t\t\texclude group: \"org.springframework\", name: \"spring-context\"\n\t\t\t\t}\n\t\t\t\tentry 'activemq-stomp'\n\t\t\t}\n\t\t\tdependency \"org.apache.bcel:bcel:6.0\"\n\t\t\tdependency \"org.apache.commons:commons-pool2:2.9.0\"\n\t\t\tdependencySet(group: 'org.apache.derby', version: '10.14.2.0') {\n\t\t\t\tentry 'derby'\n\t\t\t\tentry 'derbyclient'\n\t\t\t}\n\t\t\tdependency \"org.apache.poi:poi-ooxml:4.1.2\"\n\t\t\tdependency \"org.apache-extras.beanshell:bsh:2.0b6\"\n\t\t\tdependency \"org.freemarker:freemarker:2.3.31\"\n\t\t\tdependency \"org.hsqldb:hsqldb:2.5.2\"\n\t\t\tdependency \"org.quartz-scheduler:quartz:2.3.2\"\n\t\t\tdependency \"org.codehaus.fabric3.api:commonj:1.1.0\"\n\t\t\tdependency \"net.sf.ehcache:ehcache:2.10.6\"\n\t\t\tdependency \"org.ehcache:jcache:1.0.1\"\n\t\t\tdependency \"org.ehcache:ehcache:3.4.0\"\n\t\t\tdependency \"org.hibernate:hibernate-core:5.4.33.Final\"\n\t\t\tdependency \"org.hibernate:hibernate-validator:6.2.3.Final\"\n\t\t\tdependency \"org.webjars:webjars-locator-core:0.48\"\n\t\t\tdependency \"org.webjars:underscorejs:1.8.3\"\n\n\t\t\tdependencySet(group: 'org.apache.tomcat', version: '9.0.60') {\n\t\t\t\tentry 'tomcat-util'\n\t\t\t\tentry('tomcat-websocket') {\n\t\t\t\t\texclude group: \"org.apache.tomcat\", name: \"tomcat-servlet-api\"\n\t\t\t\t\texclude group: \"org.apache.tomcat\", name: \"tomcat-websocket-api\"\n\t\t\t\t}\n\t\t\t}\n\t\t\tdependencySet(group: 'org.apache.tomcat.embed', version: '9.0.60') {\n\t\t\t\tentry 'tomcat-embed-core'\n\t\t\t\tentry 'tomcat-embed-websocket'\n\t\t\t}\n\t\t\tdependencySet(group: 'io.undertow', version: '2.2.16.Final') {\n\t\t\t\tentry 'undertow-core'\n\t\t\t\tentry('undertow-servlet') {\n\t\t\t\t\texclude group: \"org.jboss.spec.javax.servlet\", name: \"jboss-servlet-api_4.0_spec\"\n\t\t\t\t\texclude group: \"org.jboss.spec.javax.annotation\", name: \"jboss-annotations-api_1.3_spec\"\n\t\t\t\t}\n\t\t\t\tentry('undertow-websockets-jsr') {\n\t\t\t\t\texclude group: \"org.jboss.spec.javax.websocket\", name: \"jboss-websocket-api_1.1_spec\"\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tdependency \"org.eclipse.jetty:jetty-reactive-httpclient:1.1.10\"\n\t\t\tdependency 'org.apache.httpcomponents.client5:httpclient5:5.1.3'\n\t\t\tdependency 'org.apache.httpcomponents.core5:httpcore5-reactive:5.1.3'\n\t\t\tdependency(\"org.apache.httpcomponents:httpclient:4.5.13\") {\n\t\t\t\texclude group: \"commons-logging\", name: \"commons-logging\"\n\t\t\t}\n\t\t\tdependency(\"org.apache.httpcomponents:httpasyncclient:4.1.5\") {\n\t\t\t\texclude group: \"commons-logging\", name: \"commons-logging\"\n\t\t\t}\n\t\t\tdependencySet(group: 'com.squareup.okhttp3', version: '3.14.9') {\n\t\t\t\tentry 'okhttp'\n\t\t\t\tentry 'mockwebserver'\n\t\t\t}\n\n\t\t\tdependency \"org.jruby:jruby:9.2.20.1\"\n\t\t\tdependency \"org.python:jython-standalone:2.7.1\"\n\t\t\tdependency \"org.mozilla:rhino:1.7.11\"\n\n\t\t\tdependency \"commons-fileupload:commons-fileupload:1.4\"\n\t\t\tdependency \"org.synchronoss.cloud:nio-multipart-parser:1.1.0\"\n\n\t\t\tdependency(\"org.dom4j:dom4j:2.1.3\") {\n\t\t\t\texclude group: \"jaxen\", name: \"jaxen\"\n\t\t\t\texclude group: \"net.java.dev.msv\", name: \"xsdlib\"\n\t\t\t\texclude group: \"pull-parser\", name: \"pull-parser\"\n\t\t\t\texclude group: \"xpp3\", name: \"xpp3\"\n\t\t\t}\n\t\t\tdependency(\"jaxen:jaxen:1.2.0\") {\n\t\t\t\texclude group: \"dom4j\", name: \"dom4j\"\n\t\t\t}\n\n\t\t\tdependency(\"junit:junit:4.13.2\") {\n\t\t\t\texclude group: \"org.hamcrest\", name: \"hamcrest-core\"\n\t\t\t}\n\t\t\tdependency(\"de.bechte.junit:junit-hierarchicalcontextrunner:4.12.1\") {\n\t\t\t\texclude group: \"junit\", name: \"junit\"\n\t\t\t}\n\t\t\tdependency \"org.testng:testng:7.4.0\"\n\t\t\tdependency \"org.junit.support:testng-engine:1.0.1\"\n\t\t\tdependency \"org.hamcrest:hamcrest:2.1\"\n\t\t\tdependency \"org.awaitility:awaitility:3.1.6\"\n\t\t\tdependency \"org.assertj:assertj-core:3.22.0\"\n\t\t\tdependencySet(group: 'org.xmlunit', version: '2.9.0') {\n\t\t\t\tentry 'xmlunit-assertj'\n\t\t\t\tentry('xmlunit-matchers') {\n\t\t\t\t\texclude group: \"org.hamcrest\", name: \"hamcrest-core\"\n\t\t\t\t}\n\t\t\t}\n\t\t\tdependencySet(group: 'org.mockito', version: '4.4.0') {\n\t\t\t\tentry('mockito-core') {\n\t\t\t\t\texclude group: \"org.hamcrest\", name: \"hamcrest-core\"\n\t\t\t\t}\n\t\t\t\tentry 'mockito-junit-jupiter'\n\t\t\t}\n\t\t\tdependency \"io.mockk:mockk:1.12.1\"\n\n\t\t\tdependency(\"net.sourceforge.htmlunit:htmlunit:2.59.0\") {\n\t\t\t\texclude group: \"commons-logging\", name: \"commons-logging\"\n\t\t\t}\n\t\t\tdependency(\"org.seleniumhq.selenium:htmlunit-driver:2.59.0\") {\n\t\t\t\texclude group: \"commons-logging\", name: \"commons-logging\"\n\t\t\t}\n\t\t\tdependency(\"org.seleniumhq.selenium:selenium-java:3.141.59\") {\n\t\t\t\texclude group: \"commons-logging\", name: \"commons-logging\"\n\t\t\t\texclude group: \"io.netty\", name: \"netty\"\n\t\t\t}\n\t\t\tdependency \"org.skyscreamer:jsonassert:1.5.0\"\n\t\t\tdependency \"com.jayway.jsonpath:json-path:2.6.0\"\n\t\t\tdependency \"org.bouncycastle:bcpkix-jdk15on:1.66\"\n\n\t\t\tdependencySet(group: 'org.apache.tiles', version: '3.0.8') {\n\t\t\t\tentry 'tiles-api'\n\t\t\t\tentry('tiles-core', withoutJclOverSlf4j)\n\t\t\t\tentry('tiles-servlet', withoutJclOverSlf4j)\n\t\t\t\tentry('tiles-jsp', withoutJclOverSlf4j)\n\t\t\t\tentry('tiles-el', withoutJclOverSlf4j)\n\t\t\t\tentry('tiles-extras') {\n\t\t\t\t\texclude group: \"org.springframework\", name: \"spring-web\"\n\t\t\t\t\texclude group: \"org.slf4j\", name: \"jcl-over-slf4j\"\n\t\t\t\t}\n\t\t\t}\n\t\t\tdependency(\"org.apache.taglibs:taglibs-standard-jstlel:1.2.5\") {\n\t\t\t\texclude group: \"org.apache.taglibs\", name: \"taglibs-standard-spec\"\n\t\t\t}\n\n\t\t\tdependency \"com.ibm.websphere:uow:6.0.2.17\"\n\t\t\tdependency \"com.jamonapi:jamon:2.82\"\n\t\t\tdependency \"joda-time:joda-time:2.10.13\"\n\t\t\tdependency \"org.eclipse.persistence:org.eclipse.persistence.jpa:2.7.10\"\n\t\t\tdependency \"org.javamoney:moneta:1.3\"\n\n\t\t\tdependency \"com.sun.activation:javax.activation:1.2.0\"\n\t\t\tdependency \"com.sun.mail:javax.mail:1.6.2\"\n\t\t\tdependencySet(group: 'com.sun.xml.bind', version: '2.3.0.1') {\n\t\t\t\tentry 'jaxb-core'\n\t\t\t\tentry 'jaxb-impl'\n\t\t\t\tentry 'jaxb-xjc'\n\t\t\t}\n\n\t\t\tdependency \"javax.activation:javax.activation-api:1.2.0\"\n\t\t\tdependency \"javax.annotation:javax.annotation-api:1.3.2\"\n\t\t\tdependency \"javax.cache:cache-api:1.1.0\"\n\t\t\tdependency \"javax.ejb:javax.ejb-api:3.2\"\n\t\t\tdependency \"javax.el:javax.el-api:3.0.1-b04\"\n\t\t\tdependency \"javax.enterprise.concurrent:javax.enterprise.concurrent-api:1.0\"\n\t\t\tdependency \"javax.faces:javax.faces-api:2.2\"\n\t\t\tdependency \"javax.inject:javax.inject:1\"\n\t\t\tdependency \"javax.inject:javax.inject-tck:1\"\n\t\t\tdependency \"javax.interceptor:javax.interceptor-api:1.2.2\"\n\t\t\tdependency \"javax.jms:javax.jms-api:2.0.1\"\n\t\t\tdependency \"javax.json:javax.json-api:1.1.4\"\n\t\t\tdependency \"javax.json.bind:javax.json.bind-api:1.0\"\n\t\t\tdependency \"javax.mail:javax.mail-api:1.6.2\"\n\t\t\tdependency \"javax.money:money-api:1.0.3\"\n\t\t\tdependency \"javax.resource:javax.resource-api:1.7.1\"\n\t\t\tdependency \"javax.servlet:javax.servlet-api:4.0.1\"\n\t\t\tdependency \"javax.servlet.jsp:javax.servlet.jsp-api:2.3.2-b02\"\n\t\t\tdependency \"javax.servlet.jsp.jstl:javax.servlet.jsp.jstl-api:1.2.1\"\n\t\t\tdependency \"javax.transaction:javax.transaction-api:1.3\"\n\t\t\tdependency \"javax.validation:validation-api:2.0.1.Final\"\n\t\t\tdependency \"javax.websocket:javax.websocket-api:1.1\"\n\t\t\tdependency \"javax.xml.bind:jaxb-api:2.3.1\"\n\t\t\tdependency \"javax.xml.ws:jaxws-api:2.3.1\"\n\n\t\t\tdependency \"org.eclipse.persistence:javax.persistence:2.2.0\"\n\n\t\t\t// Substitute for \"javax.management:jmxremote_optional:1.0.1_04\" which\n\t\t\t// is not available on Maven Central\n\t\t\tdependency \"org.glassfish.external:opendmk_jmxremote_optional_jar:1.0-b01-ea\"\n\t\t\tdependency \"org.glassfish:javax.el:3.0.1-b08\"\n\t\t\tdependency \"org.glassfish.main:javax.jws:4.0-b33\"\n\t\t\tdependency \"org.glassfish.tyrus:tyrus-container-servlet:1.13.1\"\n\t\t}\n\t\tgeneratedPomCustomization {\n\t\t\tenabled = false\n\t\t}\n\t\tresolutionStrategy {\n\t\t\tcacheChangingModulesFor 0, \"seconds\"\n\t\t}\n\t\trepositories {\n\t\t\tmavenCentral()\n\t\t\tmaven { url \"https://repo.spring.io/libs-spring-framework-build\" }\n\t\t}\n\t}\n\tconfigurations.all {\n\t\tresolutionStrategy {\n\t\t\tcacheChangingModulesFor 0, \"seconds\"\n\t\t\tcacheDynamicVersionsFor 0, \"seconds\"\n\t\t}\n\t}\n}\n\nconfigure([rootProject] + javaProjects) { project ->\n\tgroup = \"org.springframework\"\n\n\tapply plugin: \"java\"\n\tapply plugin: \"java-test-fixtures\"\n\tapply plugin: \"checkstyle\"\n\tapply plugin: 'org.springframework.build.compile'\n\tapply from: \"${rootDir}/gradle/toolchains.gradle\"\n\tapply from: \"${rootDir}/gradle/ide.gradle\"\n\n\tpluginManager.withPlugin(\"kotlin\") {\n\t\tapply plugin: \"org.jetbrains.dokka\"\n\t\tapply from: \"${rootDir}/gradle/docs-dokka.gradle\"\n\n\t\tcompileKotlin {\n\t\t\tkotlinOptions {\n\t\t\t\tlanguageVersion = \"1.3\"\n\t\t\t\tapiVersion = \"1.3\"\n\t\t\t\tfreeCompilerArgs = [\"-Xjsr305=strict\", \"-Xsuppress-version-warnings\", \"-Xopt-in=kotlin.RequiresOptIn\"]\n\t\t\t\tallWarningsAsErrors = true\n\t\t\t}\n\t\t}\n\t\tcompileTestKotlin {\n\t\t\tkotlinOptions {\n\t\t\t\tfreeCompilerArgs = [\"-Xjsr305=strict\"]\n\t\t\t}\n\t\t}\n\t}\n\n\ttest {\n\t\tuseJUnitPlatform()\n\t\tinclude([\"**/*Tests.class\", \"**/*Test.class\"])\n\t\tsystemProperty(\"java.awt.headless\", \"true\")\n\t\tsystemProperty(\"testGroups\", project.properties.get(\"testGroups\"))\n\t\tsystemProperty(\"io.netty.leakDetection.level\", \"paranoid\")\n\t}\n\n\tcheckstyle {\n\t\ttoolVersion = \"9.3\"\n\t\tconfigDirectory.set(rootProject.file(\"src/checkstyle\"))\n\t}\n\n\tdependencies {\n\t\ttestImplementation(\"org.junit.jupiter:junit-jupiter-api\")\n\t\ttestImplementation(\"org.junit.jupiter:junit-jupiter-params\")\n\t\ttestImplementation(\"org.junit.platform:junit-platform-suite-api\")\n\t\ttestImplementation(\"org.mockito:mockito-core\")\n\t\ttestImplementation(\"org.mockito:mockito-junit-jupiter\")\n\t\ttestImplementation(\"io.mockk:mockk\")\n\t\ttestImplementation(\"org.assertj:assertj-core\")\n\t\t// Pull in the latest JUnit 5 Launcher API to ensure proper support in IDEs.\n\t\ttestRuntimeOnly(\"org.junit.jupiter:junit-jupiter-engine\")\n\t\ttestRuntimeOnly(\"org.junit.platform:junit-platform-launcher\")\n\t\ttestRuntimeOnly(\"org.junit.platform:junit-platform-suite-engine\")\n\t\ttestRuntimeOnly(\"org.apache.logging.log4j:log4j-core\")\n\t\ttestRuntimeOnly(\"org.apache.logging.log4j:log4j-jul\")\n\t\ttestRuntimeOnly(\"org.apache.logging.log4j:log4j-slf4j-impl\")\n\t\t// JSR-305 only used for non-required meta-annotations\n\t\tcompileOnly(\"com.google.code.findbugs:jsr305\")\n\t\ttestCompileOnly(\"com.google.code.findbugs:jsr305\")\n\t\tcheckstyle(\"io.spring.javaformat:spring-javaformat-checkstyle:0.0.31\")\n\t}\n\n\text.javadocLinks = [\n\t\t\t\"https://docs.oracle.com/javase/8/docs/api/\",\n\t\t\t\"https://docs.oracle.com/javaee/7/api/\",\n\t\t\t\"https://docs.oracle.com/cd/E13222_01/wls/docs90/javadocs/\",  // CommonJ\n\t\t\t\"https://www.ibm.com/docs/api/v1/content/SSEQTP_8.5.5/com.ibm.websphere.javadoc.doc/web/apidocs/\",\n\t\t\t\"https://docs.jboss.org/jbossas/javadoc/4.0.5/connector/\",\n\t\t\t\"https://docs.jboss.org/jbossas/javadoc/7.1.2.Final/\",\n\t\t\t\"https://tiles.apache.org/tiles-request/apidocs/\",\n\t\t\t\"https://tiles.apache.org/framework/apidocs/\",\n\t\t\t\"https://www.eclipse.org/aspectj/doc/released/aspectj5rt-api/\",\n\t\t\t\"https://www.ehcache.org/apidocs/2.10.4/\",\n\t\t\t\"https://www.quartz-scheduler.org/api/2.3.0/\",\n\t\t\t\"https://fasterxml.github.io/jackson-core/javadoc/2.10/\",\n\t\t\t\"https://fasterxml.github.io/jackson-databind/javadoc/2.10/\",\n\t\t\t\"https://fasterxml.github.io/jackson-dataformat-xml/javadoc/2.10/\",\n\t\t\t\"https://hc.apache.org/httpcomponents-client-5.1.x/current/httpclient5/apidocs/\",\n\t\t\t\"https://projectreactor.io/docs/test/release/api/\",\n\t\t\t\"https://junit.org/junit4/javadoc/4.13.2/\",\n\t\t\t// Disabling linking to JUnit 5.8.2, since the `package-list` file no longer exists due to\n\t\t\t// https://github.com/junit-team/junit5/commit/67ad4e545518b0ce2b0e7c96df31a669866d5003.\n\t\t\t// \"https://junit.org/junit5/docs/5.8.2/api/\",\n\t\t\t\"https://www.reactive-streams.org/reactive-streams-1.0.3-javadoc/\",\n\t\t\t\"https://javadoc.io/static/io.rsocket/rsocket-core/1.1.1/\",\n\t\t\t\"https://r2dbc.io/spec/0.8.5.RELEASE/api/\",\n\t\t\t// The external Javadoc link for JSR 305 must come last to ensure that types from\n\t\t\t// JSR 250 (such as @PostConstruct) are still supported. This is due to the fact\n\t\t\t// that JSR 250 and JSR 305 both define types in javax.annotation, which results\n\t\t\t// in a split package, and the javadoc tool does not support split packages\n\t\t\t// across multiple external Javadoc sites.\n\t\t\t\"https://www.javadoc.io/doc/com.google.code.findbugs/jsr305/3.0.2/\"\n\t] as String[]\n}\n\nconfigure(moduleProjects) { project ->\n\tapply from: \"${rootDir}/gradle/spring-module.gradle\"\n}\n\nconfigure(rootProject) {\n\tdescription = \"Spring Framework\"\n\n\tapply plugin: \"kotlin\"\n\tapply plugin: \"io.spring.nohttp\"\n\tapply plugin: 'org.springframework.build.api-diff'\n\tapply from: \"${rootDir}/gradle/publications.gradle\"\n\tapply from: \"${rootDir}/gradle/docs.gradle\"\n\n\tnohttp {\n\t\tsource.exclude \"**/test-output/**\"\n\t\tallowlistFile = project.file(\"src/nohttp/allowlist.lines\")\n\t\tdef rootPath = file(rootDir).toPath()\n\t\tdef projectDirs = allprojects.collect { it.projectDir } + \"${rootDir}/buildSrc\"\n\t\tprojectDirs.forEach { dir ->\n\t\t\t[ 'bin', 'build', 'out', '.settings' ]\n\t\t\t\t.collect { rootPath.relativize(new File(dir, it).toPath()) }\n\t\t\t\t.forEach { source.exclude \"$it/**\" }\n\t\t\t[ '.classpath', '.project' ]\n\t\t\t\t.collect { rootPath.relativize(new File(dir, it).toPath()) }\n\t\t\t\t.forEach { source.exclude \"$it\" }\n\t\t}\n\t}\n\n\tpublishing {\n\t\tpublications {\n\t\t\tmavenJava(MavenPublication) {\n\t\t\t\tartifact docsZip\n\t\t\t\tartifact schemaZip\n\t\t\t\tartifact distZip\n\t\t\t}\n\t\t}\n\t}\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/build.gradle b/build.gradle
--- a/build.gradle	(revision d927e3736483c8f1e0c012fa1027a198fc775f66)
+++ b/build.gradle	(date 1648456629241)
@@ -14,6 +14,12 @@
 	id "me.champeau.jmh" version "0.6.6" apply false
 }
 
+repositories {
+	maven{ url = uri("https://maven.aliyun.com/repository/central") }
+	maven{ url = uri("https://maven.aliyun.com/repository/public") }
+}
+
+
 ext {
 	moduleProjects = subprojects.findAll { it.name.startsWith("spring-") }
 	javaProjects = subprojects - project(":framework-bom")
